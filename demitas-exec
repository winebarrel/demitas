#!/bin/bash
set -e

if [ -n "$DMTS_DEBUG" ]; then
  set -x
fi

: ${DMTS_CONF_DIR:=~/.demitas}
: ${DMTS_EXEC_IMAGE:=public.ecr.aws/lts/ubuntu:latest}
: ${DMTS_EXEC_COMMAND:=bash}

function usage() {
  echo 'Usage: demitas-exec [ --conf-dir=$DMTS_CONF_DIR ] [-p PROFILE] [ -c CLUSTER ] [ -i IMAGE ] [ -e COMMAND ] [ -f family ] [ --use-def-image ] [ --skip-stop ]' 1>&2
}

if [ $# -eq 0 ]; then
  usage
  exit 0
fi

function stop_task() {
  trap ':' SIGINT
  echo "Stopping ECS task... (Please wait for a while): $TASK_ID"
  aws ecs stop-task --cluster "$CLUSTER" --task "$TASK_ID" > /dev/null
  echo 'done'
}

while getopts p:c:i:e:f:-: OPT; do
  optarg="$OPTARG"

  if [ "$OPT" = - ]; then
    OPT="-${OPTARG%%=*}"
    optarg="${OPTARG/${OPTARG%%=*}/}"
    optarg="${optarg#=}"
  fi

  case "-$OPT" in
    -p)
      PROFILE="$optarg"
    ;;
    -c)
      CLUSTER="$optarg"
    ;;
    -i)
      DMTS_EXEC_IMAGE="$optarg"
    ;;
    -e)
      DMTS_EXEC_COMMAND="$optarg"
    ;;
    -f)
      FAMILY="$optarg"
    ;;
    --conf-dir)
      DMTS_CONF_DIR="$optarg"
    ;;
    --use-def-image)
      USE_DEF_IMAGE=1
    ;;
    --skip-stop)
      SKIP_STOP=1
    ;;
    *)
      usage
      exit 1
    ;;
  esac
done

if [ $USE_DEF_IMAGE ]; then
  CONTAINER_OVERRIDES='{command:["sleep", "infinity"]}'
else
  CONTAINER_OVERRIDES='{image: "'"$DMTS_EXEC_IMAGE"'", command:["sleep", "infinity"]}'
fi

if [ -z "$CLUSTER" ]; then
  set +e
  CLUSTER_LINE=( $(grep ^cluster: $DMTS_CONF_DIR/$PROFILE/ecspresso.yml 2> /dev/null) )
  set -e
  CLUSTER="${CLUSTER_LINE[1]}"

  if [ -z "$CLUSTER" ]; then
    echo 'Please specify ECS cluster' 1>&2
    exit 1
  fi
fi

if [ -n "$PROFILE" ]; then
  DEMITAS_OPTS="$DEMITAS_OPTS -p $PROFILE"
fi

if [ -n "$(aws ecs describe-clusters --cluster $CLUSTER --output text --query 'failures')" ]; then
  echo "error: Cluster not found: $CLUSTER"
  exit 1
fi

if [ -n "$FAMILY" ]; then
  TASK_OVERRIDES='{family:"'"$FAMILY"'"}'
fi

export DMTS_CONF_DIR
ECSPRESSO_POTS='--wait-until=running'

echo 'Start ECS task...'

set +e
DEMITAS_OUT=$(demitas $DEMITAS_OPTS -t "$TASK_OVERRIDES" -c "$CONTAINER_OVERRIDES" -- $ECSPRESSO_POTS --dry-run 2>&1 > /dev/null)

if [ $? -ne 0 ]; then
  echo "demitas dry-run failed: demitas $DEMITAS_OPTS -t '$TASK_OVERRIDES' -c '$CONTAINER_OVERRIDES' -- $ECSPRESSO_POTS --dry-run"
  echo $DEMITAS_OUT
  exit 1
fi
set -e

LINE=( $(demitas $DEMITAS_OPTS -t "$TASK_OVERRIDES" -c "$CONTAINER_OVERRIDES" -- $ECSPRESSO_POTS | grep 'Task ID') )
TASK_ID="${LINE[5]}"

if [ -z "$TASK_ID" ]; then
  echo 'error: Started task cannot be found'
fi

echo "ECS task is running: $TASK_ID"

if [ ! $SKIP_STOP ]; then
  trap stop_task SIGINT
fi

set +e

while true; do
  aws ecs execute-command --cluster "$CLUSTER" --task "$TASK_ID" --interactive --command echo >/dev/null 2>/dev/null
  [ $? -eq 0 ] && break
  sleep 1
done

aws ecs execute-command --cluster "$CLUSTER" --task "$TASK_ID" --interactive --command "$DMTS_EXEC_COMMAND"

if [ ! $SKIP_STOP ]; then
  stop_task
else
  cat <<EOS
ECS task is still running.

Re-login command:
  aws ecs execute-command --cluster $CLUSTER --task $TASK_ID --command $DMTS_EXEC_COMMAND --interactive

Task stop command:
  aws ecs stop-task --cluster $CLUSTER --task $TASK_ID
EOS
fi
